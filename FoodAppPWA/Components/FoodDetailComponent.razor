@inject HttpClient Http

<h3>FoodDetailComponent</h3>
@if (Food.Name != null)
{
    <div class="col-12 row">
        <div class="col-2">
            <img src="@Food.Image" class="rounded-circle" style="width: 18rem;" />
        </div>
        <div class="col-10 row">
            <div class="col-xs-12 col-sm-8">
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Food ID</label>
                    <div class="col-sm-8">
                        <label type="text" class="form-control-plaintext">@Food.FoodId</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Food name</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Name</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Calories</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Calories</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Total Fat</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Fat g</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Cholesterol</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Cholestrol</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Sodium</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Sodium</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Potassium</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Potassium</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Total Carbohydrates</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Carbohydrates</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Protein</label>
                    <div class="col-sm-8">
                        <label type="text" readonly class="form-control-plaintext">@Food.Protein</label>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Vitamin</label>
                    <div class="col-sm-8">

                        <label type="text" readonly class="form-control-plaintext">@Food.Vitamin</label>

                    </div>
                </div>

            </div>
        </div>
        <a href="/" >Go back</a>
    </div>
}

@code{
    private Food[] Foods { get; set; }
    string baseUrl = "https://localhost:44396/";
    private Food Food { get; set; } = new Food();
    [Parameter]
    public string FoodId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }
    protected async Task Load()
    {
        Foods = await Http.GetFromJsonAsync<Food[]>($"{baseUrl}api/foods");
        Food = Foods.FirstOrDefault(f => f.FoodId == int.Parse(FoodId));
    }

}